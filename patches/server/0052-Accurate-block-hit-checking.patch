From cb250c467d9cabb15908e28a045c52e5db3d58dd Mon Sep 17 00:00:00 2001
From: Austin Mayes <austin@avicus.net>
Date: Mon, 16 Oct 2017 14:33:41 -0500
Subject: [PATCH] Accurate block hit checking

---
 .../java/org/bukkit/craftbukkit/CraftWorld.java    | 24 ++++++++++++++++++++
 .../org/bukkit/craftbukkit/block/CraftBlock.java   | 26 ++++++++++++++++++++++
 .../org/bukkit/craftbukkit/entity/CraftPlayer.java | 16 +++++++++++++
 3 files changed, 66 insertions(+)

diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 9fa833e..ba27541 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -54,6 +54,7 @@ import org.bukkit.inventory.ItemStack;
 import org.bukkit.metadata.MetadataValue;
 import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.messaging.StandardMessenger;
+import org.bukkit.util.RayBlockIntersection;
 import org.bukkit.util.Vector;
 import org.github.paperspigot.exception.ServerInternalException;
 
@@ -620,6 +621,29 @@ public class CraftWorld implements World {
         return getHighestBlockAt(location.getBlockX(), location.getBlockZ());
     }
 
+    @Override
+    public RayBlockIntersection rayTraceBlock(Location start, double distance, boolean nonSolids, boolean liquids) {
+        Validate.isTrue(start.getWorld() == this, "wrong world");
+        return rayTraceBlock(start.toVector(), start.toVector().add(start.getDirection().multiply(distance)), nonSolids, liquids);
+    }
+
+    @Override
+    public RayBlockIntersection rayTraceBlock(Vector start, Vector end, boolean nonSolids, boolean liquids) {
+        Validate.isTrue(nonSolids || !liquids, "cannot include liquids without non-solids");
+        MovingObjectPosition hit = getHandle().rayTrace(new Vec3D(start.getX(), start.getY(), start.getZ()),
+            new Vec3D(end.getX(), end.getY(), end.getZ()),
+            liquids,
+            !nonSolids,
+            false);
+        if(hit != null && hit.type == MovingObjectPosition.EnumMovingObjectType.BLOCK) {
+            return new RayBlockIntersection(getBlockAt(hit.a().getX(), hit.a().getY(), hit.a().getZ()),
+                CraftBlock.notchToBlockFace(hit.direction),
+                new Vector(hit.pos.a, hit.pos.b, hit.pos.c));
+        } else {
+            return null;
+        }
+    }
+
     public Biome getBiome(int x, int z) {
         return CraftBlock.biomeBaseToBiome(this.world.getBiome(new BlockPosition(x, 0, z)));
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
index 22a8055..5857c9b 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
@@ -23,6 +23,8 @@ import org.bukkit.inventory.ItemStack;
 import org.bukkit.metadata.MetadataValue;
 import org.bukkit.plugin.Plugin;
 import org.bukkit.util.BlockVector;
+import org.bukkit.util.RayBlockIntersection;
+import org.bukkit.util.Vector;
 
 public class CraftBlock implements Block {
     private final CraftChunk chunk;
@@ -559,4 +561,28 @@ public class CraftBlock implements Block {
     public void removeMetadata(String metadataKey, Plugin owningPlugin) {
         chunk.getCraftWorld().getBlockMetadata().removeMetadata(this, metadataKey, owningPlugin);
     }
+
+    @Override
+    public RayBlockIntersection rayTrace(Vector start, Vector end) {
+        net.minecraft.server.Block nms = CraftMagicNumbers.getBlock(getType());
+        if(nms == null) return null;
+
+        MovingObjectPosition hit = nms.a(chunk.getCraftWorld().getHandle(),
+            new BlockPosition(x, y, z),
+            new Vec3D(start.getX(), start.getY(), start.getZ()),
+            new Vec3D(end.getX(), end.getY(), end.getZ()));
+
+        if(hit != null && hit.type == MovingObjectPosition.EnumMovingObjectType.BLOCK) {
+            return new RayBlockIntersection(this,
+                CraftBlock.notchToBlockFace(hit.direction),
+                new Vector(hit.pos.a, hit.pos.b, hit.pos.c));
+        } else {
+            return null;
+        }
+    }
+
+    @Override
+    public RayBlockIntersection rayTrace(Location start, double distance) {
+        return rayTrace(start.toVector(), start.toVector().add(start.getDirection().multiply(distance)));
+    }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index f6fb51a..45339b3 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -66,6 +66,7 @@ import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.messaging.StandardMessenger;
 import org.bukkit.scoreboard.Scoreboard;
 // PaperSpigot start
+import org.bukkit.util.RayBlockIntersection;
 import org.github.paperspigot.Title;
 // PaperSpigot end
 
@@ -2025,5 +2026,20 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         BlockPosition pos = getHandle().playerInteractManager.i;
         return getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
     }
+
+    @Override
+    public double getBlockReach() {
+        return getGameMode() == GameMode.CREATIVE ? 6 : 4.5;
+    }
+
+    @Override
+    public RayBlockIntersection getTargetedBlock(double distance, boolean nonSolids, boolean liquids) {
+        return getWorld().rayTraceBlock(getEyeLocation(), distance, nonSolids, liquids);
+    }
+
+    @Override
+    public RayBlockIntersection getTargetedBlock(boolean nonSolids, boolean liquids) {
+        return getTargetedBlock(getBlockReach(), nonSolids, liquids);
+    }
     // Magnet end
 }
-- 
2.6.4

