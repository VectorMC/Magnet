From 1446797a569f66e83f2d9a3b23f34a02e12cf492 Mon Sep 17 00:00:00 2001
From: Austin Mayes <austin@avicus.net>
Date: Sun, 15 Oct 2017 14:03:16 -0500
Subject: [PATCH] Block digging API

---
 src/main/java/org/bukkit/entity/Player.java   | 11 +++++
 .../event/block/BlockUndamageEvent.java       | 40 +++++++++++++++++++
 2 files changed, 51 insertions(+)
 create mode 100644 src/main/java/org/bukkit/event/block/BlockUndamageEvent.java

diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 149b7791..c5f2f3be 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -989,6 +989,17 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
     public boolean teleportRelative(org.bukkit.util.Vector deltaPos, float deltaYaw, float deltaPitch, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause);
     public boolean teleportRelative(org.bukkit.util.Vector deltaPos, float deltaYaw, float deltaPitch);
 
+    /**
+     * Is the player digging a block?
+     */
+    public boolean isDigging();
+
+    /**
+     * Return the {@link org.bukkit.block.Block} that the player is currently digging,
+     * or null if they are not digging any block.
+     */
+    public org.bukkit.block.Block getDiggingBlock();
+
     /**
      * Checks to see if this player is currently standing on a block. This
      * information may not be reliable, as it is a state provided by the
diff --git a/src/main/java/org/bukkit/event/block/BlockUndamageEvent.java b/src/main/java/org/bukkit/event/block/BlockUndamageEvent.java
new file mode 100644
index 00000000..7e818803
--- /dev/null
+++ b/src/main/java/org/bukkit/event/block/BlockUndamageEvent.java
@@ -0,0 +1,40 @@
+package org.bukkit.event.block;
+
+import org.bukkit.block.Block;
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+
+/**
+ * Called when a player stops digging a block WITHOUT breaking it. This is the
+ * counterpart to {@link BlockDamageEvent}, which fires when the player starts
+ * digging. This event will not be called if the player completes the dig and
+ * breaks the block. It will also not be called if the block breaks instantly
+ * when the player starts digging.
+ */
+public class BlockUndamageEvent extends BlockEvent {
+  private static final HandlerList handlers = new HandlerList();
+  private final Player player;
+
+  public BlockUndamageEvent(final Player player, final Block block) {
+    super(block);
+    this.player = player;
+  }
+
+  /**
+   * Gets the player damaging the block involved in this event.
+   *
+   * @return The player damaging the block involved in this event
+   */
+  public Player getPlayer() {
+    return player;
+  }
+
+  @Override
+  public HandlerList getHandlers() {
+    return handlers;
+  }
+
+  public static HandlerList getHandlerList() {
+    return handlers;
+  }
+}
\ No newline at end of file
-- 
2.18.0.windows.1

