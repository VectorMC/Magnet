From 41d90d37fd2dc685d90d5977c81b26a33cc7884a Mon Sep 17 00:00:00 2001
From: Austin Mayes <austin@avicus.net>
Date: Sun, 15 Oct 2017 15:51:11 -0500
Subject: [PATCH] Logging improvements

---
 .../java/org/bukkit/plugin/PluginLogger.java  | 21 ++++++++++++++++++-
 .../org/bukkit/plugin/java/JavaPlugin.java    |  2 +-
 2 files changed, 21 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/bukkit/plugin/PluginLogger.java b/src/main/java/org/bukkit/plugin/PluginLogger.java
index f43c10b0..f409a285 100644
--- a/src/main/java/org/bukkit/plugin/PluginLogger.java
+++ b/src/main/java/org/bukkit/plugin/PluginLogger.java
@@ -1,6 +1,7 @@
 package org.bukkit.plugin;
 
 import java.util.logging.Level;
+import java.util.logging.LogManager;
 import java.util.logging.LogRecord;
 import java.util.logging.Logger;
 
@@ -14,6 +15,25 @@ import java.util.logging.Logger;
 public class PluginLogger extends Logger {
     private String pluginName;
 
+    public static PluginLogger get(Plugin context) {
+        LogManager lm = LogManager.getLogManager();
+        Logger logger = lm.getLogger(context.getClass().getCanonicalName());
+
+        if(logger instanceof PluginLogger) {
+            return (PluginLogger) logger;
+        } else {
+            PluginLogger pluginLogger = new PluginLogger(context);
+
+            // Register the logger under the plugin's name, unless some other logger is already using the name
+            if(logger == null) {
+                lm.addLogger(pluginLogger);
+                pluginLogger.setParent(context.getServer().getLogger()); // addLogger changes this, change it back
+            }
+
+            return pluginLogger;
+        }
+    }
+
     /**
      * Creates a new PluginLogger that extracts the name from a plugin.
      *
@@ -24,7 +44,6 @@ public class PluginLogger extends Logger {
         String prefix = context.getDescription().getPrefix();
         pluginName = prefix != null ? new StringBuilder().append("[").append(prefix).append("] ").toString() : "[" + context.getDescription().getName() + "] ";
         setParent(context.getServer().getLogger());
-        setLevel(Level.ALL);
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/plugin/java/JavaPlugin.java b/src/main/java/org/bukkit/plugin/java/JavaPlugin.java
index ac4f62e9..d891eb68 100644
--- a/src/main/java/org/bukkit/plugin/java/JavaPlugin.java
+++ b/src/main/java/org/bukkit/plugin/java/JavaPlugin.java
@@ -359,7 +359,7 @@ public abstract class JavaPlugin extends PluginBase {
         this.dataFolder = dataFolder;
         this.classLoader = classLoader;
         this.configFile = new File(dataFolder, "config.yml");
-        this.logger = new PluginLogger(this);
+        this.logger = PluginLogger.get(this);
 
         if (description.isDatabaseEnabled()) {
             ServerConfig db = new ServerConfig();
-- 
2.18.0.windows.1

